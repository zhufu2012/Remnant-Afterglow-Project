[gd_scene load_steps=4 format=3 uid="uid://b6q5uc0h0ord0"]

[sub_resource type="CSharpScript" id="CSharpScript_aql6f"]
script/source = "using Godot;
using System.Collections.Generic;

namespace Remnant_Afterglow
{
	/// <summary>
	/// 建造子项列表
	/// </summary>
	public partial class BuildItemList : Control
	{
		public MapBuildLable data;

		public ScrollContainer buildItemList;
		public HBoxContainer hBoxContainer;


		/// <summary>
		/// 所有建造子项
		/// </summary>
		public List<MapBuildItem> ItemList = new List<MapBuildItem>();


		/// <summary>
		/// 格子间衔接图
		/// </summary>
		public Texture2D Map_ItemView_Img_2;

		/// <summary>
		/// 建筑格子图
		/// </summary>
		public Texture2D Map_BuildListSubView_1;

		/// <summary>
		/// 无建筑格子图
		/// </summary>
		public Texture2D Map_BuildListSubView_2;

		/// <summary>
		/// 建筑子列表左支架
		/// </summary>
		public Texture2D Map_BuildList_3;
		/// <summary>
		/// 建筑子列表右支架
		/// </summary>
		public Texture2D Map_BuildList_4;

		public TextureRect ImgList1;
		public TextureRect ImgList2;

		/// <summary>
		/// 项数
		/// </summary>
		[Export]
		public int ItemNum = 0;
		public void InitData(MapBuildLable data)
		{
			this.data = data;
			if (data == null)
			{
				ItemNum = 0;
			}
			else
			{
				List<Dictionary<string, object>> list = ConfigLoadSystem.QueryCfgAllLine(ConfigConstant.Config_MapBuildItem,
new Dictionary<string, object> { { \"BuildLableId\", data.BuildLableId } });
				foreach (Dictionary<string, object> dict in list)
				{
					ItemList.Add(new MapBuildItem(dict));
				}
				ItemNum = ItemList.Count;
			}


		}

		public override void _Ready()
		{
			InitView();
		}


		/// <summary>
		/// 初始化
		/// </summary>
		public void InitView()
		{
			hBoxContainer = GetNode<HBoxContainer>(\"BuildItemList/HBoxContainer\");
			buildItemList = GetNode<ScrollContainer>(\"BuildItemList\");
			ImgList1 = GetNode<TextureRect>(\"TextureRect\");
			ImgList2 = GetNode<TextureRect>(\"TextureRect2\");

			Map_ItemView_Img_2 = ConfigCache.GetGlobal_Png(\"Map_ItemView_Img_2\");
			Map_BuildListSubView_1 = ConfigCache.GetGlobal_Png(\"Map_BuildListSubView_1\");
			Map_BuildListSubView_2 = ConfigCache.GetGlobal_Png(\"Map_BuildListSubView_2\");

			Map_BuildList_3 = ConfigCache.GetGlobal_Png(\"Map_BuildList_3\");
			Map_BuildList_4 = ConfigCache.GetGlobal_Png(\"Map_BuildList_4\");

			InitItemNum();
		}


		public void InitItemNum()
		{
			if (ItemNum == 0)
			{
				ImgList1.Texture = Map_BuildList_3;
				ImgList1.GlobalPosition = new Vector2(896, 905);
				ImgList2.Texture = Map_BuildList_4;
				ImgList2.GlobalPosition = new Vector2(1000, 905);
				TextureRect textureRect = new TextureRect();
				textureRect.Texture = Map_BuildListSubView_2;
				buildItemList.GlobalPosition = new Vector2(920, 900);
				hBoxContainer.AddChild(textureRect);
			}
			else
			{
				buildItemList.GlobalPosition = new Vector2(960 - ((ItemNum - 1) * 80 + 40), 900);
				buildItemList.Size = new Vector2(ItemNum * 80, 80);
				for (int i = 0; i < ItemList.Count; i++)
				{
					TextureRect textureRect = new TextureRect();
					textureRect.Texture = ItemList[i].LablePng;
					hBoxContainer.AddChild(textureRect);
				}
			}
		}

	}
}
"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_g0lay"]
load_path = "res://.godot/imported/建造子列表支架左.png-af075044312a6e9560d8e38773f84a8f.ctex"

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_jlvaj"]
load_path = "res://.godot/imported/建造子列表支架右.png-03f293657b60be5736e205394d396cce.ctex"

[node name="Control" type="Control"]
layout_mode = 3
anchors_preset = 0
offset_left = 960.0
offset_top = 1080.0
offset_right = 960.0
offset_bottom = 1080.0
script = SubResource("CSharpScript_aql6f")
ItemNum = null

[node name="TextureRect" type="TextureRect" parent="."]
layout_mode = 0
offset_left = -64.0
offset_top = -175.0
offset_right = -40.0
offset_bottom = -71.0
texture = SubResource("CompressedTexture2D_g0lay")
expand_mode = 3

[node name="TextureRect2" type="TextureRect" parent="."]
layout_mode = 0
offset_left = 40.0
offset_top = -175.0
offset_right = 64.0
offset_bottom = -71.0
texture = SubResource("CompressedTexture2D_jlvaj")

[node name="BuildItemList" type="ScrollContainer" parent="."]
clip_contents = false
layout_mode = 0
offset_left = -40.0
offset_top = -180.0
offset_right = 40.0
offset_bottom = -100.0

[node name="HBoxContainer" type="HBoxContainer" parent="BuildItemList"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_constants/separation = 0
